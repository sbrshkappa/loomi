version: '3.8'

services:
  ai-storyteller:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ENDPOINT=${OPENAI_ENDPOINT}
      - IDEOGRAM_API_KEY=${IDEOGRAM_API_KEY}
      - IDEOGRAM_ENDPOINT=${IDEOGRAM_ENDPOINT}
      - AI_MODEL_CONFIG=${AI_MODEL_CONFIG:-openai_gpt-4}
      - AI_TEMPERATURE=${AI_TEMPERATURE:-0.7}
      - AI_MAX_TOKENS=${AI_MAX_TOKENS:-5000}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./uploads:/app/uploads
      - ./images:/app/images
      - ./fonts:/app/fonts
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: PostgreSQL for production
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: ai_storyteller
  #     POSTGRES_USER: storyteller
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

volumes:
  redis_data:
  # postgres_data: 